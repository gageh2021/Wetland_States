start
model <- nls(RdNBR ~ alpha * exp(beta * Distance_m) + theta , data = Distance_data_positive, start = start)
fit <- nls(RdNBR ~ SSasymp(Distance_m, yf, y0, log_alpha), data = Distance_data_positive)
fit
qplot(t, y, data = augment(fit)) + geom_line(aes(y = .fitted))
install.packages("broom")
pacman::p_load(reshape2,stats,dplyr,tidyr,broom,ggplot2,ggpubr,FSA,RColorBrewer,here,ggridges,plotly,lmtest,pscl,MASS,lattice,segmented,Hmisc,corrplot,nls2)
pacman::p_load(reshape2,stats,dplyr,tidyr,broom,ggplot2,ggpubr,FSA,RColorBrewer,here,ggridges,plotly,lmtest,pscl,MASS,lattice,segmented,Hmisc,corrplot,nls2)
#Please check that the working directory displays correctly using 'here()'.
#It should show that the current directory ends with .../Wetland_States_Rpository
wetland_data<-read.table(here("Data","Full_RS_data.csv"),header=T,sep=",")
attach(wetland_data)
proportion_data<-read.table(here("Data","Proportion_data.csv"),header=T,sep=",")
attach(proportion_data)
RdNBR_data<-filter(wetland_data,OID!=c("37","70"))
Distance_data<-read.table(here("Data","Margin_Middle_RdNBR.csv"),header=T,sep=",")
attach(Distance_data)
Distance_data_positive<-filter(Distance_data,RdNBR>=0)
Correlation_data<-read.table(here("Data","Correlation_plot_data.csv"),header=T,sep=",")
attach(Correlation_data)
fit <- nls(RdNBR ~ SSasymp(Distance_m, yf, y0, log_alpha), data = Distance_data_positive)
fit
qplot(t, y, data = augment(fit)) + geom_line(aes(y = .fitted))
fit <- nls(RdNBR ~ SSasymp(Distance_m, yf, y0, log_alpha), data = Distance_data_positive)
fit
qplot(t, y, data = augment(fit)) + geom_line(aes(RdNBR = .fitted))
fit <- nls(RdNBR ~ SSasymp(Distance_m, yf, y0, log_alpha), data = Distance_data_positive)
fit
qplot(Distance_m, RdNBR, data = augment(fit)) + geom_line(aes(RdNBR = .fitted))
qplot(Distance_m, y, data = augment(fit)) + geom_line(aes(y = .fitted))
qplot(Distance_m, y, data = augment(fit)) + geom_line(aes(y = .fitted))
fit <- nls(y ~ SSasymp(Distance_m, yf, y0, log_alpha), data = Distance_data_positive)
fit <- nls(RdNBR ~ SSasymp(Distance_m, yf, y0, log_alpha), data = Distance_data_positive)
fit
summary(fit)
fit
ggplot(data=Distance_data_positive, aes(x=Distance_m, y=RdNBR)) +
geom_point() +
geom_smooth(color="Blue", se=F) +
geom_smooth(method="nls", formula=RdNBR~SSasymp(Distance_m, Asym, R0, lrc), color="red", se=F, fullrange=T)
ggplot(data=Distance_data_positive, aes(x=Distance_m, y=RdNBR)) +
geom_point() +
geom_smooth(color="Blue", se=F) +
geom_smooth(method="nls", formula=RdNBR~SSasymp(Distance_m, yf, y0, log_alpha), data=Distance_data_positive,color="red", se=F, fullrange=T)
ggplot(data=Distance_data_positive, aes(x=Distance_m, y=RdNBR)) +
geom_point() +
geom_smooth(method="nls", formula=RdNBR~SSasymp(Distance_m, yf, y0, log_alpha), data=Distance_data_positive,color="red", se=F, fullrange=T)
ggplot(data=Distance_data_positive, aes(x=Distance_m, y=RdNBR)) +
geom_point() +
geom_smooth(method="nls", nls(RdNBR ~ SSasymp(Distance_m, yf, y0, log_alpha), data = Distance_data_positive))
ggplot(data=Distance_data_positive, aes(x=Distance_m, y=RdNBR)) +
geom_point() +
geom_smooth(method="nls", nls(RdNBR ~ SSasymp(Distance_m, yf, y0, log_alpha), data = Distance_data_positive))
ggplot(data=Distance_data_positive, aes(x=Distance_m, y=RdNBR)) +
geom_point() +
geom_smooth(method="nls", nls(RdNBR ~ SSasymp(Distance_m, yf, y0, log_alpha), data = Distance_data_positive))
ggplot(data=Distance_data_positive, aes(x=Distance_m, y=RdNBR)) +
geom_point() +
geom_smooth(method="nls", formula = RdNBR ~ SSasymp(Distance_m, yf, y0, log_alpha), data = Distance_data_positive))
ggplot(data=Distance_data_positive, aes(x=Distance_m, y=RdNBR)) +
geom_point() +
geom_smooth(method="nls", formula = RdNBR ~ SSasymp(Distance_m, yf, y0, log_alpha), data = Distance_data_positive)
fit <- nls(RdNBR ~ SSasymp(Distance_m, yf, y0, log_alpha), data = Distance_data_positive)
fit
ggplot(data=Distance_data_positive, aes(x=Distance_m, y=RdNBR)) +
geom_point() +
geom_smooth(method="nls", formula = RdNBR ~ SSasymp(Distance_m, 281.299, 630.437, -2.171), data = Distance_data_positive)
pacman::p_load(reshape2,stats,dplyr,tidyr,broom,ggplot2,ggpubr,FSA,RColorBrewer,here,ggridges,plotly,lmtest,pscl,MASS,lattice,segmented,Hmisc,corrplot,nls2)
#Please check that the working directory displays correctly using 'here()'.
#It should show that the current directory ends with .../Wetland_States_Rpository
wetland_data<-read.table(here("Data","Full_RS_data.csv"),header=T,sep=",")
attach(wetland_data)
proportion_data<-read.table(here("Data","Proportion_data.csv"),header=T,sep=",")
attach(proportion_data)
RdNBR_data<-filter(wetland_data,OID!=c("37","70"))
Distance_data<-read.table(here("Data","Margin_Middle_RdNBR.csv"),header=T,sep=",")
attach(Distance_data)
Distance_data_positive<-filter(Distance_data,RdNBR>=0)
Correlation_data<-read.table(here("Data","Correlation_plot_data.csv"),header=T,sep=",")
attach(Correlation_data)
summary_cor<-rcorr(Correlation_data,type='spearman')
Full_correlation_data<-model.matrix(~0+., data=Correlation_data)
Full_corr<-cor(Full_correlation_data,method='spearman')
p<-corrplot(Full_corr,method='number')
p<-corrplot(Full_corr,method='circle')
Numerical_correlation_data<-subset(Correlation_data,select=-c(State,Beaver_Dam))
Numerical_correlation_data
Num_corr<-cor(Numerical_correlation_data,method='spearman')
p<-corrplot(Num_corr,method='circle')
Numerical_correlation_data_filtered<-filter(Numerical_correlation_data,State!=E)
Numerical_correlation_data_filtered
Numerical_correlation_data_filtered<-filter(Numerical_correlation_data,State!="E")
Numerical_correlation_data_filtered
Numerical_correlation_data_filtered<-filter(Numerical_correlation_data,State!="E")
Numerical_correlation_data_filtered
Num_corr_f<-cor(Numerical_correlation_data_filtered,method='spearman')
p<-corrplot(Num_corr_f,method='circle')
Numerical_correlation_data_filtered<-filter(Numerical_correlation_data,State!="A")
Numerical_correlation_data_filtered
Num_corr_f<-cor(Numerical_correlation_data_filtered,method='spearman')
p<-corrplot(Num_corr_f,method='circle')
Numerical_correlation_data<-subset(Correlation_data,select=-c(State,Beaver_Dam))
Numerical_correlation_data
Num_corr<-cor(Numerical_correlation_data,method='spearman')
p<-corrplot(Num_corr,method='circle')
Margin_middle_plot<-ggplot(Distance_data_positive,aes(x=Distance_m,y=RdNBR))+theme_classic()+geom_point(alpha=0.7,colour='#98022e')+geom_smooth(method='lm',se=FALSE,colour='black')+
labs(y='RdNBR', x="Distance from margin (m)")+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
axis.text.y=element_text(size=17,colour='black'))
Margin_middle_plot
Margin_middle_plot<-ggplot(Distance_data_positive,aes(x=sqrt(Distance_m),y=RdNBR))+theme_classic()+geom_point(alpha=0.7,colour='#98022e')+geom_smooth(method='lm',se=FALSE,colour='black')+
labs(y='RdNBR', x="Square Root of Distance from margin (m)")+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
axis.text.y=element_text(size=17,colour='black'))
Margin_middle_plot<-ggplot(Distance_data_positive,aes(x=sqrt(Distance_m),y=RdNBR))+theme_classic()+geom_point(alpha=0.7,colour='#98022e')+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
axis.text.y=element_text(size=17,colour='black'))
Margin_middle_plot
Margin_middle_plot<-ggplot(Distance_data_positive,aes(x=sqrt(Distance_m),y=RdNBR))+theme_classic()+geom_point(alpha=0.7,colour='#98022e')+
labs(y='RdNBR', x="Square Root of Distance from margin (m)")+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
axis.text.y=element_text(size=17,colour='black'))
Margin_middle_plot
Margin_middle_plot<-ggplot(Distance_data_positive,aes(x=sqrt(Distance_m),y=RdNBR))+theme_classic()+geom_point(alpha=0.7,colour='#98022e')+
labs(y='RdNBR', x="Square Root of Distance from wetland edge (m)")+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
axis.text.y=element_text(size=17,colour='black'))
Margin_middle_plot
A_margin<-filter(Distance_data_positive,State=="A")
B_margin<-filter(Distance_data_positive,State=="B")
C_margin<-filter(Distance_data_positive,State=="C")
D_margin<-filter(Distance_data_positive,State=="D")
E_margin<-filter(Distance_data_positive,State=="E")
Margin_middle_plot<-ggplot(E_margin,aes(x=sqrt(Distance_m),y=RdNBR))+theme_classic()+geom_point(alpha=0.7,colour='#98022e')+
labs(y='RdNBR', x="Square Root of Distance from wetland edge (m)")+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
axis.text.y=element_text(size=17,colour='black'))
Margin_middle_plot
Margin_middle_plot<-ggplot(E_margin,aes(x=Distance_m,y=RdNBR))+theme_classic()+geom_point(alpha=0.7,colour='#98022e')+
labs(y='RdNBR', x="Square Root of Distance from wetland edge (m)")+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
axis.text.y=element_text(size=17,colour='black'))
Margin_middle_plot
theta.0 <- min(Distance_data_positive$RdNBR) * 0.5
model.0 <- lm(log(RdNBR - theta.0) ~ Distance_m, data=Distance_data_positive)
alpha.0 <- exp(coef(model.0)[1])
beta.0 <- coef(model.0)[2]
start <- list(alpha = alpha.0, beta = beta.0, theta = theta.0)
start
model <- nls(RdNBR ~ alpha * exp(beta * Distance_m) + theta , data = Distance_data_positive, start = start)
RdNBR_density<-ggplot(data=Distance_data,aes(x=RdNBR))+theme_classic()+
labs(x="RdNBR",y="Relative Frequency")+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
legend.title = element_text(size = 17,face='bold'),
legend.text = element_text(size=15),legend.position = c(0.85,0.85),
legend.box.background = element_rect(colour = "black"))
Mean_density
RdNBR_density<-ggplot(data=Distance_data,aes(x=RdNBR))+theme_classic()+
labs(x="RdNBR",y="Relative Frequency")+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
legend.title = element_text(size = 17,face='bold'),
legend.text = element_text(size=15),legend.position = c(0.85,0.85),
legend.box.background = element_rect(colour = "black"))
RdNBR_density
RdNBR_density<-ggplot(data=Distance_data,aes(x=RdNBR))+theme_classic()+
geom_density(alpha=0.4)+
labs(x="RdNBR",y="Relative Frequency")+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
legend.title = element_text(size = 17,face='bold'),
legend.text = element_text(size=15),legend.position = c(0.85,0.85),
legend.box.background = element_rect(colour = "black"))
RdNBR_density
RdNBR_density<-ggplot(data=sqrt(Distance_data),aes(x=RdNBR))+theme_classic()+
geom_density(alpha=0.4)+
labs(x="RdNBR",y="Relative Frequency")+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
legend.title = element_text(size = 17,face='bold'),
legend.text = element_text(size=15),legend.position = c(0.85,0.85),
legend.box.background = element_rect(colour = "black"))
RdNBR_density
RdNBR_density<-ggplot(data=Distance_data,aes(x=sqrt(RdNBR)))+theme_classic()+
geom_density(alpha=0.4)+
labs(x="RdNBR",y="Relative Frequency")+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
legend.title = element_text(size = 17,face='bold'),
legend.text = element_text(size=15),legend.position = c(0.85,0.85),
legend.box.background = element_rect(colour = "black"))
RdNBR_density
RdNBR_density<-ggplot(data=Distance_data,aes(x=log(RdNBR)))+theme_classic()+
geom_density(alpha=0.4)+
labs(x="RdNBR",y="Relative Frequency")+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
legend.title = element_text(size = 17,face='bold'),
legend.text = element_text(size=15),legend.position = c(0.85,0.85),
legend.box.background = element_rect(colour = "black"))
RdNBR_density
pacman::p_load(reshape2,stats,dplyr,tidyr,broom,ggplot2,ggpubr,FSA,RColorBrewer,here,ggridges,plotly,lmtest,pscl,MASS,lattice,segmented,Hmisc,corrplot,nls2)
#Please check that the working directory displays correctly using 'here()'.
#It should show that the current directory ends with .../Wetland_States_Rpository
wetland_data<-read.table(here("Data","Full_RS_data.csv"),header=T,sep=",")
attach(wetland_data)
proportion_data<-read.table(here("Data","Proportion_data.csv"),header=T,sep=",")
attach(proportion_data)
RdNBR_data<-filter(wetland_data,OID!=c("37","70"))
Distance_data<-read.table(here("Data","Margin_Middle_RdNBR.csv"),header=T,sep=",")
attach(Distance_data)
Distance_data_positive<-filter(Distance_data,RdNBR>=0)
Correlation_data<-read.table(here("Data","Correlation_plot_data.csv"),header=T,sep=",")
attach(Correlation_data)
beaver_data<-filter(RdNBR_data,State!="E")
wilcox.test(RdNBR_mean ~ Beaver_Dam, data=beaver_data)
boxplot13<-ggplot(data=beaver_data,aes(x=Beaver_Dam,y=Water_Proportion))+
geom_boxplot(outlier.shape = NA)+labs(y="Proportion of Open Water (%)",x="Beaver Dam")+
theme_classic()+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
axis.text.y=element_text(size=17,colour='black'))+geom_jitter(alpha=0.7,colour='#98022e')
boxplot_13
boxplot_13<-ggplot(data=beaver_data,aes(x=Beaver_Dam,y=Water_Proportion))+
geom_boxplot(outlier.shape = NA)+labs(y="Proportion of Open Water (%)",x="Beaver Dam")+
theme_classic()+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
axis.text.y=element_text(size=17,colour='black'))+geom_jitter(alpha=0.7,colour='#98022e')
boxplot_13
pacman::p_load(reshape2,stats,dplyr,tidyr,broom,ggplot2,ggpubr,FSA,RColorBrewer,here,ggridges,plotly,lmtest,pscl,MASS,lattice,segmented,Hmisc,corrplot,nls2)
#Please check that the working directory displays correctly using 'here()'.
#It should show that the current directory ends with .../Wetland_States_Rpository
wetland_data<-read.table(here("Data","Full_RS_data.csv"),header=T,sep=",")
attach(wetland_data)
proportion_data<-read.table(here("Data","Proportion_data.csv"),header=T,sep=",")
attach(proportion_data)
RdNBR_data<-filter(wetland_data,OID!=c("37","70"))
Distance_data<-read.table(here("Data","Margin_Middle_RdNBR.csv"),header=T,sep=",")
attach(Distance_data)
Distance_data_positive<-filter(Distance_data,RdNBR>=0)
Correlation_data<-read.table(here("Data","Correlation_plot_data.csv"),header=T,sep=",")
attach(Correlation_data)
plot_ly()%>%add_trace(x=~NDMI_mean,y=~Mean_NDWI_Pre,z=~RdNBR_mean,type='mesh3d',colour=State,flatshading=TRUE)
plot_ly()%>%add_trace(x=~NDWI_veg_pre_mean,y=~Mean_NDWI_Pre,z=~RdNBR_mean,type='mesh3d',colour=State,flatshading=TRUE)
plot_ly()%>%add_trace(x=~NDWI_veg_pre_mean,y=~Mean_NDWI_Pre,z=~RdNBR_mean,type='scatter3d',colour=State,flatshading=TRUE)
pacman::p_load(reshape2,stats,dplyr,tidyr,broom,ggplot2,ggpubr,FSA,RColorBrewer,here,ggridges,plotly,lmtest,pscl,MASS,lattice,segmented,Hmisc,corrplot,nls2)
#Please check that the working directory displays correctly using 'here()'.
#It should show that the current directory ends with .../Wetland_States_Rpository
wetland_data<-read.table(here("Data","Full_RS_data.csv"),header=T,sep=",")
attach(wetland_data)
proportion_data<-read.table(here("Data","Proportion_data.csv"),header=T,sep=",")
attach(proportion_data)
RdNBR_data<-filter(wetland_data,OID!=c("37","70"))
Distance_data<-read.table(here("Data","Margin_Middle_RdNBR.csv"),header=T,sep=",")
attach(Distance_data)
Distance_data_positive<-filter(Distance_data,RdNBR>=0)
Correlation_data<-read.table(here("Data","Correlation_plot_data.csv"),header=T,sep=",")
attach(Correlation_data)
barplot_10<-ggplot(data=RdNBR_data, aes(x=State, y=Beaver_Dam))+
geom_bar(stat="identity", fill="#98022e")+labs(y="Beaver dam (%)",x="Successional Stage")+
theme_classic()+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
axis.text.y=element_text(size=17,colour='black'))
barplot_10
barplot_10<-ggplot(data=proportion_data, aes(x=State, y=Dam_Proportion))+
geom_bar(stat="identity", fill="#98022e")+labs(y="Beaver dam (%)",x="Successional Stage")+
theme_classic()+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
axis.text.y=element_text(size=17,colour='black'))
barplot_10
proportion_data<-read.table(here("Data","Proportion_data.csv"),header=T,sep=",")
attach(proportion_data)
barplot_10<-ggplot(data=proportion_data, aes(x=State, y=Dam_Proportion))+
geom_bar(stat="identity", fill="#98022e")+labs(y="Beaver dam (%)",x="Successional Stage")+
theme_classic()+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
axis.text.y=element_text(size=17,colour='black'))
barplot_10
barplot_10<-ggplot(data=proportion_data, aes(x=State, y=Dam_Proportion))+
geom_bar(stat="identity", fill="#98022e")+labs(y="Proportion of Wetlands with a Beaver dam (%)",x="Successional Stage")+
theme_classic()+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
axis.text.y=element_text(size=17,colour='black'))
barplot_10
barplot_10<-ggplot(data=proportion_data, aes(x=State, y=Dam_Proportion))+
geom_bar(stat="identity", fill="#98022e")+labs(y="Proportion of Wetlands with a Beaver dam (%)",x="Successional Stage")+
theme_classic()+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
axis.text.y=element_text(size=17,colour='black'))
barplot_10
ggsave(filename = here("Figures","Barplot10_Dam_Proportion.png"))
summary_cor<-rcorr(Correlation_data,type='spearman')
Full_correlation_data<-model.matrix(~0+., data=Correlation_data)
Full_corr<-cor(Full_correlation_data,method='spearman')
p<-corrplot(Full_corr,method='circle')
Numerical_correlation_data<-subset(Correlation_data,select=-c(State,Beaver_Dam))
Numerical_correlation_data
Num_corr<-cor(Numerical_correlation_data,method='spearman')
p<-corrplot(Num_corr,method='circle')
RdNBR_density<-ggplot(data=Distance_data,aes(x=RdNBR))+theme_classic()+
geom_density(alpha=0.4)+
labs(x="You are so hot",y="Relative Frequency")+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
legend.title = element_text(size = 17,face='bold'),
legend.text = element_text(size=15),legend.position = c(0.85,0.85),
legend.box.background = element_rect(colour = "black"))
RdNBR_density
RdNBR_density<-ggplot(data=Distance_data,aes(x=RdNBR))+theme_classic()+
geom_density(alpha=0.4)+
labs(x="RdNBR",y="Relative Frequency")+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
legend.title = element_text(size = 17,face='bold'),
legend.text = element_text(size=15),legend.position = c(0.85,0.85),
legend.box.background = element_rect(colour = "black"))
RdNBR_density
RdNBR_density<-ggplot(data=Distance_data,aes(x=log(RdNBR)))+theme_classic()+
geom_density(alpha=0.4)+
labs(x="RdNBR",y="Relative Frequency")+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
legend.title = element_text(size = 17,face='bold'),
legend.text = element_text(size=15),legend.position = c(0.85,0.85),
legend.box.background = element_rect(colour = "black"))
RdNBR_density
RdNBR_density<-ggplot(data=Distance_data,aes(x=sqrt(RdNBR)))+theme_classic()+
geom_density(alpha=0.4)+
labs(x="RdNBR",y="Relative Frequency")+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
legend.title = element_text(size = 17,face='bold'),
legend.text = element_text(size=15),legend.position = c(0.85,0.85),
legend.box.background = element_rect(colour = "black"))
RdNBR_density
plot(Distance_data_positive$Distance_m, sqrt(Distance_data_positive$RdNBR))
plot(sqrt(Distance_data_positive$Distance_m), sqrt(Distance_data_positive$RdNBR))
fit <- lm(sqrt(RdNBR) ~ E_sqrt_Distance_m, data=E_margin)
segmented.fit <- segmented(fit, seg.Z = ~E_sqrt_Distance_m, psi=2)
summary(segmented.fit)
E_sqrt_Distance_m<-sqrt(E_margin$Distance_m)
fit <- lm(sqrt(RdNBR) ~ E_sqrt_Distance_m, data=E_margin)
segmented.fit <- segmented(fit, seg.Z = ~E_sqrt_Distance_m, psi=2)
summary(segmented.fit)
plot(E_sqrt_Distance_m, sqrt(E_margin$RdNBR), pch=16,col='steelblue')
plot(segmented.fit, add=T)
plot(log(Distance_data_positive$Distance_m), log(Distance_data_positive$RdNBR))
lines(Distance_data_positive$Distance_m, predict(model, list(x = Distance_data_positive$Distance_m)), col = 'skyblue', lwd = 3)
plot((Distance_data_positive$Distance_m), log(Distance_data_positive$RdNBR))
lines(Distance_data_positive$Distance_m, predict(model, list(x = Distance_data_positive$Distance_m)), col = 'skyblue', lwd = 3)
plot((Distance_data_positive$Distance_m), sqrt(Distance_data_positive$RdNBR))
lines(Distance_data_positive$Distance_m, predict(model, list(x = Distance_data_positive$Distance_m)), col = 'skyblue', lwd = 3)
plot(log(Distance_data_positive$Distance_m), (Distance_data_positive$RdNBR))
lines(Distance_data_positive$Distance_m, predict(model, list(x = Distance_data_positive$Distance_m)), col = 'skyblue', lwd = 3)
plot(sqrt(Distance_data_positive$Distance_m), (Distance_data_positive$RdNBR))
lines(Distance_data_positive$Distance_m, predict(model, list(x = Distance_data_positive$Distance_m)), col = 'skyblue', lwd = 3)
E_sqrt_Distance_m<-sqrt(E_margin$Distance_m)
fit <- lm(RdNBR ~ E_sqrt_Distance_m, data=E_margin)
segmented.fit <- segmented(fit, seg.Z = ~E_sqrt_Distance_m, psi=2)
summary(segmented.fit)
plot(E_sqrt_Distance_m, (E_margin$RdNBR), pch=16,col='steelblue')
plot(segmented.fit, add=T)
segmented.fit <- segmented(fit, seg.Z = ~E_sqrt_Distance_m, psi=0)
segmented.fit <- segmented(fit, seg.Z = ~E_sqrt_Distance_m, psi=1)
summary(segmented.fit)
plot(E_sqrt_Distance_m, (E_margin$RdNBR), pch=16,col='steelblue')
plot(segmented.fit, add=T)
fit <- nls(RdNBR ~ SSasymp(Distance_m, yf, y0, log_alpha), data = Distance_data_positive)
fit
summary(fit)
fit <- nls(RdNBR ~ SSasymp(sqrt(Distance_m), yf, y0, log_alpha), data = Distance_data_positive)
fit
summary(fit)
fit <- nls(RdNBR ~ SSasymp(Distance_m, yf, y0, log_alpha), data = Distance_data_positive)
fit
summary(fit)
plot(Distance_m,RdNBR)
lines(Distance_m,predict(fit))
lines(Distance_data_positive$Distance_m,predict(fit))
lines(Distance_data_positive$Distance_m,predict(fit),colour='steelblue')
lines(Distance_data_positive$Distance_m,predict(fit),color='steelblue')
lines(Distance_data_positive$Distance_m,predict(fit))
plot(Distance_m,RdNBR,colour='steelblue')
lines(Distance_data_positive$Distance_m,predict(fit))
plot(Distance_m,RdNBR,color='steelblue')
lines(Distance_data_positive$Distance_m,predict(fit))
plot(Distance_m,RdNBR,color='steelblue')
lines(Distance_data_positive$Distance_m,predict(fit))
SD_Mean_plot<-ggplot(RdNBR_data,aes(x=RdNBR_SD,y=RdNBR_mean))+theme_classic()+geom_point(aes(colour=State,shape=State))+geom_smooth(method='lm',se=FALSE,colour="black")+
scale_colour_manual(name="Successional Stage", values=c('#F98484','red','#C10048','#7F0D30','#3C0A0A'))+
labs(y='Mean RdNBR', x="Standard Deviation of RdNBR")+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
axis.text.y=element_text(size=17,colour='black'),legend.title = element_text(size = 17,face='bold'),
legend.text = element_text(size=15),legend.position = c(0.8,0.85),
legend.box.background = element_rect(colour = "black"))+
scale_shape_manual(name="Successional Stage", values=c(15, 1, 17, 0, 19))
SD_Mean_plot
Mean_plot<-ggplot(RdNBR_data,aes(x=Area_km,y=RdNBR_mean,colour=State))+theme_classic()+geom_point(aes(shape=State))+geom_smooth(method='lm',se=FALSE)+
scale_colour_manual(values=c('#3C0A0A','#7F0D30','#C10048','red','#F98484'))+labs(y='Mean RdNBR', x=expression(bold(paste('Wetland Area (km'^2*')'))))+
theme(plot.title=element_text(size=20, face="bold", hjust=0.5,lineheight=1.2),
axis.title.x=element_text(size=20,face='bold'),
axis.title.y=element_text(size=20,face='bold'),
axis.text.x=element_text(size=17, vjust=.5,colour='black'),
axis.text.y=element_text(size=17,colour='black'), legend.title = element_text(size = 15.5,face='bold'),
legend.text = element_text(size=14),legend.position = c(0.82,0.9),legend.key.size = unit(2,"line"),legend.box.background = element_rect(colour = "black"))+scale_shape_manual(values=c(15, 1, 17, 0, 19))+
labs(colour="Successional Stage",shape='Successional Stage')+guides(color = guide_legend(nrow = 2))
Mean_plot
cor1<-lm(RdNBR_mean~Area_km,data=A_R)
summary(cor1)
plot(cor1)
shapiro.test(A_R$Area_km)
shapiro.test(A_R$RdNBR_mean)
cor1<-lm(RdNBR_mean~Area_km,data=B_R)
summary(cor1)
shapiro.test(B_R$RdNBR_mean)
bartlett.test(B_R$RdNBR_SD~A_R$RdNBR_mean)
bartlett.test(B_R$RdNBR_SD~B_R$RdNBR_mean)
cor1_np<-cor.test(A_R$Area_km,A_R$RdNBR_mean,method="kendall")
cor1_np
cor1<-lm(RdNBR_mean~Area_km,data=RdNBR_data)
summary(cor1)
plot(cor1)
shapiro.test(RdNBR_data$Area_km)
cor1_np<-cor.test(RdNBR_data$Area_km,RdNBR_data$RdNBR_mean,method="kendall")
cor1_np
shapiro.test(RdNBR_data$Area_km)
shapiro.test(RdNBR_data$RdNBR_mean)
